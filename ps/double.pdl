PROBLEM double_Problem (DOMAIN double_Domain)
{
	f0 <fact> double_Channel.double_Channel_timeline.Idle() AT [0, 0] [1, 1000] [1, 1000];
	f1 <fact> double_Port_R1.double_Port_R1_timeline.Port_R1_Available() AT [0, 0] [1, 1000] [1, 1000];
	f2 <fact> double_Port_L3.double_Port_L3_timeline.Port_L3_Available() AT [0, 0] [1, 1000] [1, 1000];
	f3 <fact> double_Port_B.double_Port_B_timeline.Port_B_Not_Available() AT [0, 0] [1, 1000] [1, 1000];
	f4 <fact> double_Cross_Transfer_2.double_Cross_Transfer_2_timeline.Cross_2_Down() AT [0, 0] [1, 1000] [1, 1000];
	f5 <fact> double_Port_F.double_Port_F_timeline.Port_F_Not_Available() AT [0, 0] [1, 1000] [1, 1000];
	f6 <fact> double_Cross_Transfer_3.double_Cross_Transfer_3_timeline.Cross_3_Down() AT [0, 0] [1, 1000] [1, 1000];
	f7 <fact> double_Port_L1.double_Port_L1_timeline.Port_L1_Available() AT [0, 0] [1, 1000] [1, 1000];
	f8 <fact> double_Cross_Transfer_1.double_Cross_Transfer_1_timeline.Cross_1_Down() AT [0, 0] [1, 1000] [1, 1000];
	f9 <fact> double_Main_Conveyor.double_Main_Conveyor_timeline.Main_Conveyor_Still() AT [0, 0] [1, 1000] [1, 1000];
	f10 <fact> double_Port_R3.double_Port_R3_timeline.Port_R3_Available() AT [0, 0] [1, 1000] [1, 1000];
	f11 <fact> double_Neighbor_B.double_Neighbor_B_timeline.Neighbor_B_Available() AT [0, 0] [1000,1000] [1000,1000];
	f12 <fact> double_Neighbor_F.double_Neighbor_F_timeline.Neighbor_F_Available() AT [0, 0] [1000,1000] [1000,1000];

}

